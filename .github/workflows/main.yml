# name: GitHub Actions Demo
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v2
#       - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "🍏 This job's status is ${{ job.status }}."
#       - run: echo "SHA is ${{ github.sha }}."
#   trivy-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Build an image from Dockerfile
#         run: |
#           echo -e "
#           FROM adoptopenjdk:11.0.10_9-jdk-hotspot-focal
#           ARG USER=wso2carbon
#           ARG USER_ID=802
#           ARG USER_GROUP=wso2
#           ARG USER_GROUP_ID=802
#           ARG USER_HOME=/home/\${USER}
#           RUN \
#               groupadd --system -g \${USER_GROUP_ID} \${USER_GROUP} \
#               && useradd --system --create-home --home-dir \${USER_HOME} --no-log-init -g \${USER_GROUP_ID} -u \${USER_ID} \${USER}

#           COPY --chown=wso2carbon:wso2 modules/distribution/product/target/new.txt \${USER_HOME}/

#           RUN \
#               apt-get update \
#               && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#                   libxml2-utils \
#                   netcat \
#                   unzip \
#               && rm -rf /var/lib/apt/lists/*

#           USER \${USER_ID}
#           WORKDIR \${USER_HOME}
#           " > Dockerfile
#           docker build -t rakhitha/note:4.1.0 . 

#       - name: Run Trivy vulnerability scanner
#         uses: aquasecurity/trivy-action@master
#         with:
#           image-ref: 'rakhitha/note:4.1.0'
#           format: 'table'
#           exit-code: '1'
#           ignore-unfixed: true
#           vuln-type: 'library'
#           severity: 'CRITICAL,HIGH,MEDIUM'


name: Carbon Kernel 4.6.x build

on: [push]
    # branches:
    #   - 4.6.x
  # pull_request:
  #   branches:
  #     - 4.6.x
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Run hostname
        run: hostname
      - name: Fix host entry
        run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
      - name: Show hosts
        run: cat /etc/hosts
      - name: Checkout to 4.6.x
        uses: actions/checkout@v3
        with:
          repository: 'wso2/carbon-kernel'
          ref: '4.6.x'
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2
      - name: Build Carbon Kernel
        run: mvn clean install --file pom.xml -Dskip.aspectj=true -Dmaven.test.skip=true -e 